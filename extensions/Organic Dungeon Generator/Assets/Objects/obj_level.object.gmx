<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
/// Create the Level
maptypedisplay = "Organic";
cellsize = 16;
reps = irandom(1000);
carver = irandom(2);
if (carver = 0) carverdisplay = "Plus";
if (carver = 1) carverdisplay = "Diagonal Line";
if (carver = 2) carverdisplay = "Square";
carversize = irandom(10);
dirfrequency = irandom(10);
roomsizeaverage = choose(4,8,10,12,14);
roomfrequency = irandom(100);
rooms = irandom(50);
hallwaysize = choose(2,4);
padding = choose(2,4,8,10);


maptype = choose(0,1,2,3,4);

// CREATE DUNGEON
if (maptype = 0) {
    scr_create_dungeon(cellsize, reps, carver, carversize);
    scr_save_dungeon("Dungeon");
} 
if (maptype = 1) {
    scr_create_dungeon2(cellsize, reps, dirfrequency, roomsizeaverage, roomfrequency);
    scr_save_dungeon("Dungeon");
}
if (maptype = 2) {
    scr_create_dungeon3(cellsize, rooms, roomsizeaverage, hallwaysize, padding);
    scr_save_dungeon("Dungeon");
}
if (maptype = 3) {
    scr_create_dungeon4(cellsize, rooms, 14, 4);
    scr_save_dungeon("Dungeon");
}
// LOAD DUNGEON
if (maptype = 4) {
    scr_load_dungeon("Dungeon", cellsize);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw Center lines
draw_set_color(c_red);
draw_set_alpha(0.5);
draw_line_width(360, 0, 360, 720, 2);
draw_line_width(0, 360, 720, 360, 2);
draw_set_alpha(1);



// Set up the text
draw_set_color(c_lime);
draw_set_halign(fa_center);
draw_set_font(fnt_dungeonname);



// Draw Text
draw_set_halign(fa_center)
draw_text(360,50,"Press [Space] for new dungeon");

if (maptype = 0) {
    draw_set_halign(fa_left);
    draw_text(20,100,"Cell Size: " + string(cellsize));
    draw_text(20,125,"Dungeon Size: " + string(reps));
    draw_text(20,150,"Carver Type: " + string(carverdisplay));
    draw_text(20,175,"Carver Size: " + string(carversize));
    draw_set_halign(fa_center);
    draw_text(360,20,"Dungeon Style: Organic");
}
if (maptype = 1) {
    draw_set_halign(fa_left);
    draw_text(20,100,"Cell Size: " + string(cellsize));
    draw_text(20,125,"Dungeon Size: " + string(reps));
    draw_text(20,150,"Direction Change Frequency: " + string(dirfrequency));
    draw_text(20,175,"Room Size Average: " + string(roomsizeaverage));
    draw_text(20,200,"Room Frequency: " + string(roomfrequency));
    draw_set_halign(fa_center);
    draw_text(360,20,"Dungeon Style: Long Hallway");
}
if (maptype = 2) {
    draw_set_halign(fa_left);
    draw_text(20,100,"Cell Size: " + string(cellsize));
    draw_text(20,125,"Rooms: " + string(rooms));
    draw_text(20,150,"Room Size: " + string(roomsizeaverage));
    draw_text(20,175,"Hallway Size: " + string(hallwaysize));
    draw_text(20,200,"Padding: " + string(padding)); 
    draw_set_halign(fa_center);
    draw_text(360,20,"Dungeon Style: Grid");   
}
if (maptype = 3) {
    draw_set_halign(fa_left);
    draw_text(20,100,"Cell Size: " + string(cellsize));
    draw_text(20,125,"Rooms: " + string(rooms));
    draw_text(20,150,"Hallway Size: " + string(hallwaysize));
    draw_set_halign(fa_center);
    draw_text(360,20,"Dungeon Style: Rooms n' Corridors");   
}
if (maptype = 4) {
    draw_set_halign(fa_center);
    draw_text(360,20,"Dungeon Style: Previously created and loaded dungeon");   
}

draw_set_halign(fa_center)
draw_text(360,600,"Warning: When the dungeon hits the end of the grid#it gets mashed up against the edge and can#throw offthe way the grid dungeon# is created.");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// New Level
ds_grid_destroy(grid);
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
